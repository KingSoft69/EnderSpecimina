plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()

    // Fabric API + Loader
    maven { url = "https://maven.fabricmc.net/" }

    // YACL
    maven { url = "https://maven.isxander.dev/releases" }

    // Mod Menu
    maven { url = "https://maven.terraformersmc.com/" }

    // Xaero’s (optional UI mods)
    maven { url = "https://api.modrinth.com/maven" }
}

dependencies {
    // Core (versions come from gradle.properties)
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Libraries
    modImplementation "dev.isxander:yet-another-config-lib:${project.yacl_version}"

    // Mod Menu — optional (RC for 1.21.5)
    modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"

    // Xaero’s — optional UI mods (don’t gate the build)
    modCompileOnly "maven.modrinth:xaeros-minimap:25.2.0_Fabric_1.21.5"
    modCompileOnly "maven.modrinth:xaeros-world-map:1.39.5_Fabric_1.21.5"
}

processResources {
    // Properties used by fabric.mod.json; avoid quoted keys to keep Groovy happy
    def expandProps = [
        version            : project.version,
        minecraft_version  : project.findProperty('minecraft_version'),
        loader_version     : project.findProperty('loader_version'),
        fabric_version     : project.findProperty('fabric_version'),
        yacl_version       : project.findProperty('yacl_version'),
        modmenu_version    : project.findProperty('modmenu_version'),
        archives_base_name : project.findProperty('archives_base_name'),
        maven_group        : project.findProperty('maven_group')
    ].findAll { it.value != null }

    // Re-run when any of these change
    inputs.properties(expandProps)

    filesMatching("fabric.mod.json") {
        expand(expandProps)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release = 21
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        // configure if you publish; safe to leave empty
    }
}
